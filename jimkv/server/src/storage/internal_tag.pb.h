// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal_tag.proto

#ifndef PROTOBUF_internal_5ftag_2eproto__INCLUDED
#define PROTOBUF_internal_5ftag_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace jimkv {
namespace ds {
namespace storage {
namespace pb {
class InternalTag;
class InternalTagDefaultTypeInternal;
extern InternalTagDefaultTypeInternal _InternalTag_default_instance_;
}  // namespace pb
}  // namespace storage
}  // namespace ds
}  // namespace jimkv

namespace jimkv {
namespace ds {
namespace storage {
namespace pb {

namespace protobuf_internal_5ftag_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_internal_5ftag_2eproto

// ===================================================================

class InternalTag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:jimkv.ds.storage.pb.InternalTag) */ {
 public:
  InternalTag();
  virtual ~InternalTag();

  InternalTag(const InternalTag& from);

  inline InternalTag& operator=(const InternalTag& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InternalTag(InternalTag&& from) noexcept
    : InternalTag() {
    *this = ::std::move(from);
  }

  inline InternalTag& operator=(InternalTag&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InternalTag& default_instance();

  static inline const InternalTag* internal_default_instance() {
    return reinterpret_cast<const InternalTag*>(
               &_InternalTag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(InternalTag* other);
  friend void swap(InternalTag& a, InternalTag& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InternalTag* New() const PROTOBUF_FINAL { return New(NULL); }

  InternalTag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InternalTag& from);
  void MergeFrom(const InternalTag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InternalTag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string txn_id = 1;
  void clear_txn_id();
  static const int kTxnIdFieldNumber = 1;
  const ::std::string& txn_id() const;
  void set_txn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_txn_id(::std::string&& value);
  #endif
  void set_txn_id(const char* value);
  void set_txn_id(const char* value, size_t size);
  ::std::string* mutable_txn_id();
  ::std::string* release_txn_id();
  void set_allocated_txn_id(::std::string* txn_id);

  // @@protoc_insertion_point(class_scope:jimkv.ds.storage.pb.InternalTag)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr txn_id_;
  mutable int _cached_size_;
  friend struct protobuf_internal_5ftag_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InternalTag

// string txn_id = 1;
inline void InternalTag::clear_txn_id() {
  txn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InternalTag::txn_id() const {
  // @@protoc_insertion_point(field_get:jimkv.ds.storage.pb.InternalTag.txn_id)
  return txn_id_.GetNoArena();
}
inline void InternalTag::set_txn_id(const ::std::string& value) {
  
  txn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jimkv.ds.storage.pb.InternalTag.txn_id)
}
#if LANG_CXX11
inline void InternalTag::set_txn_id(::std::string&& value) {
  
  txn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jimkv.ds.storage.pb.InternalTag.txn_id)
}
#endif
inline void InternalTag::set_txn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  txn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jimkv.ds.storage.pb.InternalTag.txn_id)
}
inline void InternalTag::set_txn_id(const char* value, size_t size) {
  
  txn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jimkv.ds.storage.pb.InternalTag.txn_id)
}
inline ::std::string* InternalTag::mutable_txn_id() {
  
  // @@protoc_insertion_point(field_mutable:jimkv.ds.storage.pb.InternalTag.txn_id)
  return txn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InternalTag::release_txn_id() {
  // @@protoc_insertion_point(field_release:jimkv.ds.storage.pb.InternalTag.txn_id)
  
  return txn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InternalTag::set_allocated_txn_id(::std::string* txn_id) {
  if (txn_id != NULL) {
    
  } else {
    
  }
  txn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), txn_id);
  // @@protoc_insertion_point(field_set_allocated:jimkv.ds.storage.pb.InternalTag.txn_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace pb
}  // namespace storage
}  // namespace ds
}  // namespace jimkv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_internal_5ftag_2eproto__INCLUDED
